#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.18
#  in conjunction with Tcl version 8.6
#    Nov 25, 2018 01:37:57 PM EST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import GUI_Archtype_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    GUI_Archtype_support.init(root, top)
    root.mainloop()

w = None
def create_Root():
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    GUI_Archtype_support.init(root, top)
    return (root, top)

def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    GUI_Archtype_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

def loadForm(archType):
    GUI_Archtype_support.loadForm(archType)

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        font9 = "-family {Segoe UI} -size 20 -weight bold -slant roman"  \
            " -underline 0 -overstrike 0"

        top.geometry("543x616+407+109")
        top.title("ARCHTYPE NOT LOADED")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.lblTitle = tk.Label(top)
        self.lblTitle.place(relx=0.011, rely=0.01, height=43, width=577)
        self.lblTitle.configure(background="#d9d9d9")
        self.lblTitle.configure(font=font9)
        self.lblTitle.configure(foreground="#000000")
        self.lblTitle.configure(text='ARCHTYPE NOT LOADED')

        self.lblName = tk.Label(top)
        self.lblName.place(relx=0.021, rely=0.076, height=31, width=68)
        self.lblName.configure(background="#d9d9d9")
        self.lblName.configure(foreground="#000000")
        self.lblName.configure(text='Name')

        self.roName = tk.Label(top)
        self.roName.place(relx=0.106, rely=0.081, height=25, width=200)
        self.roName.configure(background="#d9d9d9")
        self.roName.configure(foreground="#000000")
        self.roName.configure(text='')

        self.lblProficiency = tk.Label(top)
        self.lblProficiency.place(relx=0.042, rely=0.124, height=21, width=65)
        self.lblProficiency.configure(background="#d9d9d9")
        self.lblProficiency.configure(foreground="#000000")
        self.lblProficiency.configure(text='Proficiency')

        self.roProficiency = tk.Label(top)
        self.roProficiency.place(relx=0.117, rely=0.124, height=21, width=34)
        self.roProficiency.configure(background="#d9d9d9")
        self.roProficiency.configure(foreground="#000000")
        self.roProficiency.configure(text='')

        self.lblDescription = tk.Label(top)
        self.lblDescription.place(relx=0.032, rely=0.162, height=21, width=66)
        self.lblDescription.configure(background="#d9d9d9")
        self.lblDescription.configure(foreground="#000000")
        self.lblDescription.configure(text='Short Description')

        self.lblDescription = tk.Label(top)
        self.lblDescription.place(relx=0.032, rely=0.162, height=21, width=66)
        self.lblDescription.configure(background="#d9d9d9")
        self.lblDescription.configure(foreground="#000000")
        self.lblDescription.configure(text='Description')

        self.txtDescription = tk.Text(top)
        self.txtDescription.place(relx=0.117, rely=0.162, relheight=0.147
                , relwidth=0.354)
        self.txtDescription.configure(background="white")
        self.txtDescription.configure(font="TkTextFont")
        self.txtDescription.configure(foreground="black")
        self.txtDescription.configure(highlightbackground="#d9d9d9")
        self.txtDescription.configure(highlightcolor="black")
        self.txtDescription.configure(insertbackground="black")
        self.txtDescription.configure(selectbackground="#c4c4c4")
        self.txtDescription.configure(selectforeground="black")
        self.txtDescription.configure(width=334)
        self.txtDescription.configure(wrap='word')

        self.lblBonuses = tk.Label(top)
        self.lblBonuses.place(relx=0.042, rely=0.344, height=31, width=74)
        self.lblBonuses.configure(background="#d9d9d9")
        self.lblBonuses.configure(foreground="#000000")
        self.lblBonuses.configure(text='Bonuses')

        self.lblSTR = tk.Label(top)
        self.lblSTR.place(relx=0.032, rely=0.382, height=21, width=26)
        self.lblSTR.configure(background="#d9d9d9")
        self.lblSTR.configure(foreground="#000000")
        self.lblSTR.configure(text='STR')

        self.roSTR = tk.Label(top)
        self.roSTR.place(relx=0.095, rely=0.382, height=21, width=34)
        self.roSTR.configure(background="#d9d9d9")
        self.roSTR.configure(foreground="#000000")
        self.roSTR.configure(text='')

        self.lblPER = tk.Label(top)
        self.lblPER.place(relx=0.032, rely=0.41, height=21, width=26)
        self.lblPER.configure(background="#d9d9d9")
        self.lblPER.configure(foreground="#000000")
        self.lblPER.configure(text='PER')

        self.roPER = tk.Label(top)
        self.roPER.place(relx=0.095, rely=0.41, height=21, width=34)
        self.roPER.configure(background="#d9d9d9")
        self.roPER.configure(foreground="#000000")
        self.roPER.configure(text='')

        self.lblINT = tk.Label(top)
        self.lblINT.place(relx=0.032, rely=0.439, height=21, width=26)
        self.lblINT.configure(background="#d9d9d9")
        self.lblINT.configure(foreground="#000000")
        self.lblINT.configure(text='INT')

        self.roINT = tk.Label(top)
        self.roINT.place(relx=0.095, rely=0.439, height=21, width=34)
        self.roINT.configure(background="#d9d9d9")
        self.roINT.configure(foreground="#000000")
        self.roINT.configure(text='')

        self.lblDEX = tk.Label(top)
        self.lblDEX.place(relx=0.032, rely=0.468, height=21, width=26)
        self.lblDEX.configure(background="#d9d9d9")
        self.lblDEX.configure(foreground="#000000")
        self.lblDEX.configure(text='DEX')

        self.lblCHA = tk.Label(top)
        self.lblCHA.place(relx=0.032, rely=0.496, height=21, width=26)
        self.lblCHA.configure(background="#d9d9d9")
        self.lblCHA.configure(foreground="#000000")
        self.lblCHA.configure(text='CHA')

        self.lblVIT = tk.Label(top)
        self.lblVIT.place(relx=0.032, rely=0.525, height=21, width=26)
        self.lblVIT.configure(background="#d9d9d9")
        self.lblVIT.configure(foreground="#000000")
        self.lblVIT.configure(text='VIT')

        self.lblMAG = tk.Label(top)
        self.lblMAG.place(relx=0.032, rely=0.553, height=21, width=26)
        self.lblMAG.configure(background="#d9d9d9")
        self.lblMAG.configure(foreground="#000000")
        self.lblMAG.configure(text='MAG')

        self.roDEX = tk.Label(top)
        self.roDEX.place(relx=0.095, rely=0.468, height=21, width=34)
        self.roDEX.configure(background="#d9d9d9")
        self.roDEX.configure(foreground="#000000")
        self.roDEX.configure(text='')

        self.roCHA = tk.Label(top)
        self.roCHA.place(relx=0.095, rely=0.496, height=21, width=34)
        self.roCHA.configure(background="#d9d9d9")
        self.roCHA.configure(foreground="#000000")
        self.roCHA.configure(text='')

        self.roVIT = tk.Label(top)
        self.roVIT.place(relx=0.095, rely=0.525, height=21, width=34)
        self.roVIT.configure(background="#d9d9d9")
        self.roVIT.configure(foreground="#000000")
        self.roVIT.configure(text='')

        self.roMAG = tk.Label(top)
        self.roMAG.place(relx=0.095, rely=0.553, height=21, width=34)
        self.roMAG.configure(background="#d9d9d9")
        self.roMAG.configure(foreground="#000000")
        self.roMAG.configure(text='')

        self.lblFeats = tk.Label(top)
        self.lblFeats.place(relx=0.307, rely=0.382, height=21, width=26)
        self.lblFeats.configure(background="#d9d9d9")
        self.lblFeats.configure(foreground="#000000")
        self.lblFeats.configure(text='Feats')

        self.lblMvmt = tk.Label(top)
        self.lblMvmt.place(relx=0.297, rely=0.41, height=21, width=46)
        self.lblMvmt.configure(background="#d9d9d9")
        self.lblMvmt.configure(foreground="#000000")
        self.lblMvmt.configure(text='Mvmt')

        self.lblSkillPts = tk.Label(top)
        self.lblSkillPts.place(relx=0.297, rely=0.439, height=21, width=46)
        self.lblSkillPts.configure(background="#d9d9d9")
        self.lblSkillPts.configure(foreground="#000000")
        self.lblSkillPts.configure(text='Skill Pts')

        self.lblLvlHealth = tk.Label(top)
        self.lblLvlHealth.place(relx=0.286, rely=0.468, height=21, width=66)
        self.lblLvlHealth.configure(background="#d9d9d9")
        self.lblLvlHealth.configure(foreground="#000000")
        self.lblLvlHealth.configure(text='Lvl Health')

        self.roFeats = tk.Label(top)
        self.roFeats.place(relx=0.371, rely=0.382, height=21, width=34)
        self.roFeats.configure(background="#d9d9d9")
        self.roFeats.configure(foreground="#000000")
        self.roFeats.configure(text='')

        self.roMvmt = tk.Label(top)
        self.roMvmt.place(relx=0.371, rely=0.41, height=21, width=34)
        self.roMvmt.configure(background="#d9d9d9")
        self.roMvmt.configure(foreground="#000000")
        self.roMvmt.configure(text='')

        self.roSkillPts = tk.Label(top)
        self.roSkillPts.place(relx=0.371, rely=0.439, height=21, width=34)
        self.roSkillPts.configure(background="#d9d9d9")
        self.roSkillPts.configure(foreground="#000000")
        self.roSkillPts.configure(text='')

        self.roLvlHealth = tk.Label(top)
        self.roLvlHealth.place(relx=0.371, rely=0.468, height=21, width=34)
        self.roLvlHealth.configure(background="#d9d9d9")
        self.roLvlHealth.configure(foreground="#000000")
        self.roLvlHealth.configure(text='')

        self.lblStamina = tk.Label(top)
        self.lblStamina.place(relx=0.286, rely=0.496, height=21, width=66)
        self.lblStamina.configure(background="#d9d9d9")
        self.lblStamina.configure(foreground="#000000")
        self.lblStamina.configure(text='Stamina')

        self.roStamina = tk.Label(top)
        self.roStamina.place(relx=0.371, rely=0.496, height=21, width=34)
        self.roStamina.configure(background="#d9d9d9")
        self.roStamina.configure(foreground="#000000")
        self.roStamina.configure(text='')

        self.lblAttack = tk.Label(top)
        self.lblAttack.place(relx=0.286, rely=0.525, height=21, width=66)
        self.lblAttack.configure(background="#d9d9d9")
        self.lblAttack.configure(foreground="#000000")
        self.lblAttack.configure(text='Attack')

        self.lblReflex = tk.Label(top)
        self.lblReflex.place(relx=0.286, rely=0.553, height=21, width=66)
        self.lblReflex.configure(background="#d9d9d9")
        self.lblReflex.configure(foreground="#000000")
        self.lblReflex.configure(text='Reflex')

        self.roAttack = tk.Label(top)
        self.roAttack.place(relx=0.371, rely=0.525, height=21, width=34)
        self.roAttack.configure(background="#d9d9d9")
        self.roAttack.configure(foreground="#000000")
        self.roAttack.configure(text='')

        self.roReflex = tk.Label(top)
        self.roReflex.place(relx=0.371, rely=0.553, height=21, width=34)
        self.roReflex.configure(background="#d9d9d9")
        self.roReflex.configure(foreground="#000000")
        self.roReflex.configure(text='')

        self.Close = tk.Button(top)
        self.Close.place(relx=0.032, rely=0.601, height=64, width=127)
        self.Close.configure(activebackground="#d9d9d9")
        self.Close.configure(activeforeground="#000000")
        self.Close.configure(command=GUI_Archtype_support.btnClose_Click)
        self.Close.configure(background="#d9d9d9")
        self.Close.configure(disabledforeground="#a3a3a3")
        self.Close.configure(foreground="#000000")
        self.Close.configure(highlightbackground="#d9d9d9")
        self.Close.configure(highlightcolor="black")
        self.Close.configure(pady="0")
        self.Close.configure(text='''Close''')

if __name__ == '__main__':
    vp_start_gui()
